{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"wappdriver API for WhatsApp Web Automation Wondering how to send WhatsApp messages using Python using only three lines of code? You have come to the right place! Usage \ud83d\ude0e wappdriver is a python package that helps you automate sending messages through WhatsApp Web. It enables you to send WhatsApp messages programmatically, using only three lines of code. It is very simple to use from wappdriver import WhatsApp with WhatsApp () as bot : bot . send ( 'aahnik' , # name of recipient 'hi send by a bot' ) # message # The name of the recipient should be in your contacts Read full documentation \ud83d\udcd6 to learn how to send emojis, media and files. Installation \u23ec You can easily install wappdriver from the PyPI . pip install wappdriver For Mac and Linux, you may need to use pip3 . Requirements \ud83e\uddd1\u200d\ud83d\udcbb You must have the following installed in your system for wappdriver to work. Chrome Browser Chrome Driver Make sure to have matching versions of the Chrome Browser and Chrome Driver. I recommend using the latest stable release for both to get the best performance. WappDriver does not support other Browsers. Please use Chrome for a smooth experience. Setup \u2699\ufe0f After you have installed wappdriver and the requirements stated above, you can start using wappdriver straight away. When you will run your code for the first time, you will be asked for Chrome Driver Path. When the WhatsApp web screen loads for the first time, you have to scan the QR code from you smartphone's WhatsApp application, to log into your WhatsApp account. Learn more . Getting Help \ud83d\udc81\ud83c\udffb First of all, read the Help Page . You may try to search your question in the search bar on the page. For further assistance you may ask a question the issues section. Contributing \ud83e\udd29 Please look at Code of Conduct and Contributing Guidelines . Please read the explanation of the detailed working of wappdriver from the Developer's Guide. Legal \u2696\ufe0f This project is distributed under MIT License . This code is in no way affiliated with, authorized, maintained, sponsored, or endorsed by WhatsApp or any of its affiliates or subsidiaries. This is an independent and unofficial software.","title":"Getting Started"},{"location":"#wappdriver","text":"API for WhatsApp Web Automation Wondering how to send WhatsApp messages using Python using only three lines of code? You have come to the right place!","title":"wappdriver"},{"location":"#usage","text":"wappdriver is a python package that helps you automate sending messages through WhatsApp Web. It enables you to send WhatsApp messages programmatically, using only three lines of code. It is very simple to use from wappdriver import WhatsApp with WhatsApp () as bot : bot . send ( 'aahnik' , # name of recipient 'hi send by a bot' ) # message # The name of the recipient should be in your contacts Read full documentation \ud83d\udcd6 to learn how to send emojis, media and files.","title":"Usage \ud83d\ude0e"},{"location":"#installation","text":"You can easily install wappdriver from the PyPI . pip install wappdriver For Mac and Linux, you may need to use pip3 .","title":"Installation \u23ec"},{"location":"#requirements","text":"You must have the following installed in your system for wappdriver to work. Chrome Browser Chrome Driver Make sure to have matching versions of the Chrome Browser and Chrome Driver. I recommend using the latest stable release for both to get the best performance. WappDriver does not support other Browsers. Please use Chrome for a smooth experience.","title":"Requirements \ud83e\uddd1\u200d\ud83d\udcbb"},{"location":"#setup","text":"After you have installed wappdriver and the requirements stated above, you can start using wappdriver straight away. When you will run your code for the first time, you will be asked for Chrome Driver Path. When the WhatsApp web screen loads for the first time, you have to scan the QR code from you smartphone's WhatsApp application, to log into your WhatsApp account. Learn more .","title":"Setup \u2699\ufe0f"},{"location":"#getting-help","text":"First of all, read the Help Page . You may try to search your question in the search bar on the page. For further assistance you may ask a question the issues section.","title":"Getting Help \ud83d\udc81\ud83c\udffb"},{"location":"#contributing","text":"Please look at Code of Conduct and Contributing Guidelines . Please read the explanation of the detailed working of wappdriver from the Developer's Guide.","title":"Contributing \ud83e\udd29"},{"location":"#legal","text":"This project is distributed under MIT License . This code is in no way affiliated with, authorized, maintained, sponsored, or endorsed by WhatsApp or any of its affiliates or subsidiaries. This is an independent and unofficial software.","title":"Legal \u2696\ufe0f"},{"location":"concepts/","text":"Concepts Here goes a list of concepts I have learned/implemented while building this project. Feel free to click on any concept to see a code sample where it is used. At most, search results can show two fragments from the same file, but there may be more results within the file. To learn any concept, copy and paste the concept title in Google or YouTube. Basics (functions, input, f-string, conditionals and so on) Exception Handling Objected Oriented Programming ( writing classes and methods ) Regular Expressions Directory Handling using os.path expanduser join File Handling Checking whether a file exists Reading and writing files Getting file size Python Requests Selenium WebDriver Selecting elements Clicking and sending keys File upload Concept of Xpath Using a tool like Selector's Hub Decorators Closures First-class functions Simple decorators Decorators with arguments Using functools.wraps Custom Exception Class Logging Docstings and pdoc3 Building simple CLI with Argparse Progress Bars with tqdm Python Packaging and Distribution Setuptools Install requires Publishing to PyPI Automate release to PyPI via GitHub Actions Writing in Markdown Using Badges Center Align Using VS Code Extension by Yu Zhang GitHub Pages Publishing Project Website Customizing the Dinky theme (deprecated) Using mkdocs with mkdocs-material Using a .gitattributes file to ignore any produced html from language statistics of the repo","title":"Concepts"},{"location":"concepts/#concepts","text":"Here goes a list of concepts I have learned/implemented while building this project. Feel free to click on any concept to see a code sample where it is used. At most, search results can show two fragments from the same file, but there may be more results within the file. To learn any concept, copy and paste the concept title in Google or YouTube. Basics (functions, input, f-string, conditionals and so on) Exception Handling Objected Oriented Programming ( writing classes and methods ) Regular Expressions Directory Handling using os.path expanduser join File Handling Checking whether a file exists Reading and writing files Getting file size Python Requests Selenium WebDriver Selecting elements Clicking and sending keys File upload Concept of Xpath Using a tool like Selector's Hub Decorators Closures First-class functions Simple decorators Decorators with arguments Using functools.wraps Custom Exception Class Logging Docstings and pdoc3 Building simple CLI with Argparse Progress Bars with tqdm Python Packaging and Distribution Setuptools Install requires Publishing to PyPI Automate release to PyPI via GitHub Actions Writing in Markdown Using Badges Center Align Using VS Code Extension by Yu Zhang GitHub Pages Publishing Project Website Customizing the Dinky theme (deprecated) Using mkdocs with mkdocs-material Using a .gitattributes file to ignore any produced html from language statistics of the repo","title":"Concepts"},{"location":"help/","text":"Getting Help Note this page will soon be written Chrome Driver not loaded Note this page will soon be written Could not send File Note this page will soon be written Invalid Emoji Note this page will soon be written","title":"Getting Help"},{"location":"help/#getting-help","text":"Note this page will soon be written","title":"Getting Help"},{"location":"help/#chrome-driver-not-loaded","text":"Note this page will soon be written","title":"Chrome Driver not loaded"},{"location":"help/#could-not-send-file","text":"Note this page will soon be written","title":"Could not send File"},{"location":"help/#invalid-emoji","text":"Note this page will soon be written","title":"Invalid Emoji"},{"location":"usage/01_first_time_setup/","text":"Setting up for the first time There is no hassle in setting up wappdriver . Note Make sure you have matching versions of Chrome and Chrome Driver. After you pip install wappdriver , you can directly run your code. You will be prompted to enter the installation path of Chrome Driver Executable (only once). Just copy and paste the correct path there. When you load WhatsApp for the first time, you have to scan the QR Code that will be displayed on your computer from your phone, to login into WhatsApp Web. Warning WhatsApp does not allow you to log in to the same account from multiple chrome tabs. So make sure to close any chrome tab having WhatsApp Web open . Not doing so will lead to errors. Your phone which is having that WhatsApp account must stay connected to the internet for WhatsApp Web to work Do not spam others. Use wappdriver for educational purposes only","title":"Setup"},{"location":"usage/01_first_time_setup/#setting-up-for-the-first-time","text":"There is no hassle in setting up wappdriver . Note Make sure you have matching versions of Chrome and Chrome Driver. After you pip install wappdriver , you can directly run your code. You will be prompted to enter the installation path of Chrome Driver Executable (only once). Just copy and paste the correct path there. When you load WhatsApp for the first time, you have to scan the QR Code that will be displayed on your computer from your phone, to login into WhatsApp Web. Warning WhatsApp does not allow you to log in to the same account from multiple chrome tabs. So make sure to close any chrome tab having WhatsApp Web open . Not doing so will lead to errors. Your phone which is having that WhatsApp account must stay connected to the internet for WhatsApp Web to work Do not spam others. Use wappdriver for educational purposes only","title":"Setting up for the first time"},{"location":"usage/02_sending_messages/","text":"Sending Messages Sending a Simple Message The code snippet below is enough to show you how. from wappdriver import WhatsApp with WhatsApp () as bot : bot . send ( 'aahnik' , # name of recipient 'hi send by a bot' ) # message # The name of the recipient should be in your contacts Messages with bold, italics and strike-through To send formatted text, use the same techniques you use while typing on your smartphone. Simply enclose the words with special characters as shown *bold* _italics_ -strike- Sending Emojis To send an emoji simply copy it from the internet and paste it in your message string. Here are some commonly used emojis \ud83d\ude44 \ud83d\ude02 \ud83d\ude2b \ud83e\udd14 \ud83d\udd25 \ud83d\ude0c \ud83d\ude0d \ud83e\udd23 \ud83d\ude2d \ud83d\ude02 \ud83d\ude4f \ud83d\udc95 \ud83d\udc9c \ud83d\udc49 Sending to Multiple People You can easily send a message to multiple people from wappdriver import WhatsApp recipients = [ 'friend' , 'mom' , 'dad' , 'boss' , 'client' ] with WhatsApp () as bot : for person in recipients : bot . send ( person , f 'hi { person } send by a bot' )","title":"Sending Messages"},{"location":"usage/02_sending_messages/#sending-messages","text":"","title":"Sending Messages"},{"location":"usage/02_sending_messages/#sending-a-simple-message","text":"The code snippet below is enough to show you how. from wappdriver import WhatsApp with WhatsApp () as bot : bot . send ( 'aahnik' , # name of recipient 'hi send by a bot' ) # message # The name of the recipient should be in your contacts","title":"Sending a Simple Message"},{"location":"usage/02_sending_messages/#messages-with-bold-italics-and-strike-through","text":"To send formatted text, use the same techniques you use while typing on your smartphone. Simply enclose the words with special characters as shown *bold* _italics_ -strike-","title":"Messages with bold, italics and strike-through"},{"location":"usage/02_sending_messages/#sending-emojis","text":"To send an emoji simply copy it from the internet and paste it in your message string. Here are some commonly used emojis \ud83d\ude44 \ud83d\ude02 \ud83d\ude2b \ud83e\udd14 \ud83d\udd25 \ud83d\ude0c \ud83d\ude0d \ud83e\udd23 \ud83d\ude2d \ud83d\ude02 \ud83d\ude4f \ud83d\udc95 \ud83d\udc9c \ud83d\udc49","title":"Sending Emojis"},{"location":"usage/02_sending_messages/#sending-to-multiple-people","text":"You can easily send a message to multiple people from wappdriver import WhatsApp recipients = [ 'friend' , 'mom' , 'dad' , 'boss' , 'client' ] with WhatsApp () as bot : for person in recipients : bot . send ( person , f 'hi { person } send by a bot' )","title":"Sending to Multiple People"},{"location":"usage/03_sending_files/","text":"Sending files Images, Videos and Documents With wappdriver its easy to do all these. Simply pass the path of the image or video or document file to the send method. Caution You must use absoulte file paths. File path must not have any space. Note In Windows absolute paths looks like: C:\\Users\\mathew\\img.png While in Linux or Mac they look like: /home/aahnik/img.png You can send any file type that WhatsApp supports. WhatsApp does not support files over 16 MB Sending Multiple Files You can easily pass as many arguments to send method of WhatsApp class you wish. Just remember that the first argument must be the name of the recipient. Messages with Files Hmm! wappdriver is extremely smart. It can detect whether a string is a message or a file path. So you can do this as shown below. Dont hesitate to use a multiline line string for a long message. Note The messages will be send in exactly that order.","title":"Sending Files"},{"location":"usage/03_sending_files/#sending-files","text":"","title":"Sending files"},{"location":"usage/03_sending_files/#images-videos-and-documents","text":"With wappdriver its easy to do all these. Simply pass the path of the image or video or document file to the send method. Caution You must use absoulte file paths. File path must not have any space. Note In Windows absolute paths looks like: C:\\Users\\mathew\\img.png While in Linux or Mac they look like: /home/aahnik/img.png You can send any file type that WhatsApp supports. WhatsApp does not support files over 16 MB","title":"Images, Videos and Documents"},{"location":"usage/03_sending_files/#sending-multiple-files","text":"You can easily pass as many arguments to send method of WhatsApp class you wish. Just remember that the first argument must be the name of the recipient.","title":"Sending Multiple Files"},{"location":"usage/03_sending_files/#messages-with-files","text":"Hmm! wappdriver is extremely smart. It can detect whether a string is a message or a file path. So you can do this as shown below. Dont hesitate to use a multiline line string for a long message. Note The messages will be send in exactly that order.","title":"Messages with Files"},{"location":"usage/04_advanced/","text":"Advanced Tired bot If your computer or internet is very slow, you may face timeout exceptions, or messages not being sent properly. In this case we call our bot exhausted or tired. You can solve this by overriding the default timeout value.This can be done by passing an optional argument to the WhatsApp context manager. from wappdriver import WhatsApp with WhatsApp ( timeout = 100 ) as bot : bot . send ( 'aahnik' , 'Exhausted ?' ) Note The default value of timeout is 50s. If bot is exhausted, increase timeout. Update Variables When you run wappdriver for the first time, the values of selectors is fetched from the internet. If you want to update them from wappdriver import update_vars update_selectors () If any new updates are availaible, they will be downloaded. Set Chrome Driver Path When you will use wappdriver for the first time, it will ask you to input the path of Chrome Driver Executable in your system. You can set the path programmatically from wappdriver import set_chrome_driver_path path = '/home/aahnik/Downloads/chrome_driver' set_chrome_driver_path ( path ) Replace the value of variable path with the path of chrome driver in your system. In Brief Pass name of recipient as first argument and after that you can pass as many message arguments as you wish. Note The name of recipient must be saved in your contacts. Each message argument must be a string. If you want to send a file, pass the absolute path of the file to the function. Example Use with WhatsApp () as bot : bot . send ( 'aahnik' , # name of recipient 'hi send by a bot' , # message # absolute path of an image on computer '/home/aahnik/image.png' , # absolute path of a video on computer '/home/aahnik/video.mp4' , # absolute path of pdf on computer '/home/aahnik/django.pdf' ) The first argument you need to pass is the recipient's name which must be saved in your phone. After that you can pass as many string arguments you want for message. Tip The string can be a text message or the file path if you want to send a image, video, GIF, documents etc. You can send multiple files, just pass them as arguments You must use Absolute File Paths wappdriver will automatically detect whether a string is a message or a file path.","title":"Advanced"},{"location":"usage/04_advanced/#advanced","text":"","title":"Advanced"},{"location":"usage/04_advanced/#tired-bot","text":"If your computer or internet is very slow, you may face timeout exceptions, or messages not being sent properly. In this case we call our bot exhausted or tired. You can solve this by overriding the default timeout value.This can be done by passing an optional argument to the WhatsApp context manager. from wappdriver import WhatsApp with WhatsApp ( timeout = 100 ) as bot : bot . send ( 'aahnik' , 'Exhausted ?' ) Note The default value of timeout is 50s. If bot is exhausted, increase timeout.","title":"Tired bot"},{"location":"usage/04_advanced/#update-variables","text":"When you run wappdriver for the first time, the values of selectors is fetched from the internet. If you want to update them from wappdriver import update_vars update_selectors () If any new updates are availaible, they will be downloaded.","title":"Update Variables"},{"location":"usage/04_advanced/#set-chrome-driver-path","text":"When you will use wappdriver for the first time, it will ask you to input the path of Chrome Driver Executable in your system. You can set the path programmatically from wappdriver import set_chrome_driver_path path = '/home/aahnik/Downloads/chrome_driver' set_chrome_driver_path ( path ) Replace the value of variable path with the path of chrome driver in your system.","title":"Set Chrome Driver Path"},{"location":"usage/04_advanced/#in-brief","text":"Pass name of recipient as first argument and after that you can pass as many message arguments as you wish. Note The name of recipient must be saved in your contacts. Each message argument must be a string. If you want to send a file, pass the absolute path of the file to the function. Example Use with WhatsApp () as bot : bot . send ( 'aahnik' , # name of recipient 'hi send by a bot' , # message # absolute path of an image on computer '/home/aahnik/image.png' , # absolute path of a video on computer '/home/aahnik/video.mp4' , # absolute path of pdf on computer '/home/aahnik/django.pdf' ) The first argument you need to pass is the recipient's name which must be saved in your phone. After that you can pass as many string arguments you want for message. Tip The string can be a text message or the file path if you want to send a image, video, GIF, documents etc. You can send multiple files, just pass them as arguments You must use Absolute File Paths wappdriver will automatically detect whether a string is a message or a file path.","title":"In Brief"}]}