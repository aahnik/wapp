{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"wappdriver API for WhatsApp Web Automation Wondering how to send WhatsApp messages using Python using only few lines of code? You have come to the right place! \ud83c\udf1f\ud83c\udf1f WappDriver now supports sending images , videos , documents and other file types... learn usage It's very simple to use . wappdriver enables you to send WhatsApp messages programmatically, using only 3 lines of code. A python package that helps you automate sending messages through WhatsApp Web \ud83d\ude0e How to install ?? pip install wappdriver For Mac and Linux, you may need to use pip3 . PyPI WARNING \u26a0\ufe0f WhatsApp does not allow you to login into the same account from multiple chrome tabs. So make sure to close any chrome tab which has WhatsApp Web open . Not doing so will lead to errors. Your phone which is having that WhatsApp account, must stay connected to internet for WhatsApp Web to work Requirements Chrome Browser Chrome Driver Make sure to have matching versions of Chrome Browser and Chrome Driver. I recommend to use the latest stable release of both, for the best performance. WappDriver does not support other Browsers. Please use Chrome for a smooth experience Documentation & Why wappdriver ? fast and reliable whatsapp's website structure may change, the selectors can be updated over internet dynamically, without changing code. chrome Driver path setting is hassle free actively maintained fast support, if you need help send messages with bold , italics , or ~~strike through~~ send emojis \ud83d\ude03 send images, videos and gifs send documents and files can set custom timeout, so that runs properly in old computers or with slow internet connection more features to be added Read the full Documentation to know about all the features. Want to contribute ? Please look at Code of Conduct and Contributing Guidelines Please read the explanation of the detailed working of wappdriver from the Developer's Guide. TODO: Help Read the Help Page For furthur assistance you can ask a question in issues Disclaimer This code is in no way affiliated with, authorized, maintained, sponsored or endorsed by WhatsApp or any of its affiliates or subsidiaries. This is an independent and unofficial software. Use at your own risk.","title":"wappdriver"},{"location":"#wappdriver","text":"API for WhatsApp Web Automation Wondering how to send WhatsApp messages using Python using only few lines of code? You have come to the right place! \ud83c\udf1f\ud83c\udf1f WappDriver now supports sending images , videos , documents and other file types... learn usage","title":"wappdriver"},{"location":"#its-very-simple-to-use","text":". wappdriver enables you to send WhatsApp messages programmatically, using only 3 lines of code. A python package that helps you automate sending messages through WhatsApp Web \ud83d\ude0e","title":"It's very simple to use"},{"location":"#how-to-install","text":"pip install wappdriver For Mac and Linux, you may need to use pip3 . PyPI","title":"How to install ??"},{"location":"#warning","text":"WhatsApp does not allow you to login into the same account from multiple chrome tabs. So make sure to close any chrome tab which has WhatsApp Web open . Not doing so will lead to errors. Your phone which is having that WhatsApp account, must stay connected to internet for WhatsApp Web to work","title":"WARNING \u26a0\ufe0f"},{"location":"#requirements","text":"Chrome Browser Chrome Driver Make sure to have matching versions of Chrome Browser and Chrome Driver. I recommend to use the latest stable release of both, for the best performance. WappDriver does not support other Browsers. Please use Chrome for a smooth experience","title":"Requirements"},{"location":"#documentation-why-wappdriver","text":"fast and reliable whatsapp's website structure may change, the selectors can be updated over internet dynamically, without changing code. chrome Driver path setting is hassle free actively maintained fast support, if you need help send messages with bold , italics , or ~~strike through~~ send emojis \ud83d\ude03 send images, videos and gifs send documents and files can set custom timeout, so that runs properly in old computers or with slow internet connection more features to be added Read the full Documentation to know about all the features.","title":"Documentation &amp; Why wappdriver?"},{"location":"#want-to-contribute","text":"Please look at Code of Conduct and Contributing Guidelines Please read the explanation of the detailed working of wappdriver from the Developer's Guide. TODO:","title":"Want to contribute ?"},{"location":"#help","text":"Read the Help Page For furthur assistance you can ask a question in issues","title":"Help"},{"location":"#disclaimer","text":"This code is in no way affiliated with, authorized, maintained, sponsored or endorsed by WhatsApp or any of its affiliates or subsidiaries. This is an independent and unofficial software. Use at your own risk.","title":"Disclaimer"},{"location":"Documentation/","text":"Usage Documentation This is a detailed usage documentation for using wappdriver . README for introduction. First time Setup There is no hassle in setting up wappdriver . Make sure you have matching versions of Chrome and Chrome Driver. After you pip install wappdriver , you can directly run your code. - You will be prompted to enter the installation path of Chrome Driver Executable (only once). Just copy and paste the correct path there. - When you load WhatsApp for the first time, you have to scan the QR Code that will be displayed on your computer from your phone, to login into WhatsApp Web Sending Messages Sending a Simple Message The code snippet below is enough to show you how. . Messages with bold, italics and strike-through To send formatted text, use the same techniques you use while typing on your smartphone. Simply enclose the words with special characters as shown *bold* _italics_ -strike- Sending Emojis To send an emoji simply copy it from internet and paste it in your message string. Here are some commonly used emojis \ud83d\ude44 \ud83d\ude02 \ud83d\ude2b \ud83e\udd14 \ud83d\udd25 \ud83d\ude0c \ud83d\ude0d \ud83e\udd23 \u2764\ufe0f \ud83d\ude2d \ud83d\ude02 \ud83d\ude4f \ud83d\udc95 \ud83d\udc9c \ud83d\udc49 Sending to Multiple People You can easily send a message to multiple people from wappdriver import WhatsApp recipients = ['friend','mom','dad', 'boss', 'client'] with WhatsApp() as bot: for person in recipients: bot.send(person, f'hi {person} send by a bot') Sending files Images, Videos and Documents With wappdriver its easy to do all these. Simply pass the path of the image or video or document file to the send method. - You must use absoulte file paths. - File path must not have any space Note: - In Windows absolute paths looks like: C:\\Users\\mathew\\img.png - While in Linux or Mac they look like: /home/aahnik/img.png You can send any file type that WhatsApp supports. WhatsApp does not support files over 16 MB Sending Multiple Files You can easily pass as many arguments to send method of WhatsApp class you wish. Just remember that the first argument must be the name of the recipient. Messages with Files Hmm! wappdriver is extremely smart. It can detect whether a string is a message or a file path. So you can do this as shown below. Dont hesitate to use a multiline line string for a long message. The messages will be send in exactly that order. Tired bot If your computer or internet is very slow, you may face timeout exceptions, or messages not being sent properly. In this case we call our bot exhausted or tired. You can solve this by overriding the default timeout value.This can be done by passing an optional argument to the WhatsApp context manager. from wappdriver import WhatsApp with WhatsApp(timeout=100) as bot: bot.send('aahnik', 'Exhausted ?') The default value of timeout is 50s ( when you dont pass the argument) If bot is exhausted, increase timeout. Update Variables When you run wappdriver for the first time, the values of selectors is fetched from the internet. If you want to update them from wappdriver import update_vars update_vars() If any new updates are availaible, they will be downloaded. Set Chrome Driver Path When you will use wappdriver for the first time, it will ask you to input the path of Chrome Driver Executable in your system. You can set the path programmatically from wappdriver import set_chrome_driver_path path = '/home/aahnik/Downloads/chrome_driver' set_chrome_driver_path(path) Replace the value of variable path with the path of chrome driver in your system. In Brief Pass name of recipient as first argument and after that you can pass as many message arguments as you wish. The name of recipient must be saved in your contacts. Each message argument must be a string. If you want to send a file, pass the absolute path of the file to the function. Example Use: with WhatsApp() as bot: bot.send('aahnik', # name of recipient 'hi send by a bot', # message # absolute path of an image on computer '/home/aahnik/image.png', # absolute path of a video on computer '/home/aahnik/video.mp4', # absolute path of pdf on computer '/home/aahnik/django.pdf' ) The first argument you need to pass is the recipient's name which must be saved in your phone. After that you can pass as many string arguments you want for message. The string can be: - a text message or - the file path if you want to send a image, video, GIF, documents etc. - you can send multiple files, just pass them as arguments - You must use Absolute File Paths wappdriver will automatically detect whether a string is a message or a file path. If you are a developer and want to contribute code, read Developer Guide","title":"Usage Documentation"},{"location":"Documentation/#usage-documentation","text":"This is a detailed usage documentation for using wappdriver . README for introduction.","title":"Usage Documentation"},{"location":"Documentation/#first-time-setup","text":"There is no hassle in setting up wappdriver . Make sure you have matching versions of Chrome and Chrome Driver. After you pip install wappdriver , you can directly run your code. - You will be prompted to enter the installation path of Chrome Driver Executable (only once). Just copy and paste the correct path there. - When you load WhatsApp for the first time, you have to scan the QR Code that will be displayed on your computer from your phone, to login into WhatsApp Web","title":"First time Setup"},{"location":"Documentation/#sending-messages","text":"","title":"Sending Messages"},{"location":"Documentation/#sending-a-simple-message","text":"The code snippet below is enough to show you how. .","title":"Sending a Simple Message"},{"location":"Documentation/#messages-with-bold-italics-and-strike-through","text":"To send formatted text, use the same techniques you use while typing on your smartphone. Simply enclose the words with special characters as shown *bold* _italics_ -strike-","title":"Messages with bold, italics and strike-through"},{"location":"Documentation/#sending-emojis","text":"To send an emoji simply copy it from internet and paste it in your message string. Here are some commonly used emojis \ud83d\ude44 \ud83d\ude02 \ud83d\ude2b \ud83e\udd14 \ud83d\udd25 \ud83d\ude0c \ud83d\ude0d \ud83e\udd23 \u2764\ufe0f \ud83d\ude2d \ud83d\ude02 \ud83d\ude4f \ud83d\udc95 \ud83d\udc9c \ud83d\udc49","title":"Sending Emojis"},{"location":"Documentation/#sending-to-multiple-people","text":"You can easily send a message to multiple people from wappdriver import WhatsApp recipients = ['friend','mom','dad', 'boss', 'client'] with WhatsApp() as bot: for person in recipients: bot.send(person, f'hi {person} send by a bot')","title":"Sending to Multiple People"},{"location":"Documentation/#sending-files","text":"","title":"Sending files"},{"location":"Documentation/#images-videos-and-documents","text":"With wappdriver its easy to do all these. Simply pass the path of the image or video or document file to the send method. - You must use absoulte file paths. - File path must not have any space Note: - In Windows absolute paths looks like: C:\\Users\\mathew\\img.png - While in Linux or Mac they look like: /home/aahnik/img.png You can send any file type that WhatsApp supports. WhatsApp does not support files over 16 MB","title":"Images, Videos and Documents"},{"location":"Documentation/#sending-multiple-files","text":"You can easily pass as many arguments to send method of WhatsApp class you wish. Just remember that the first argument must be the name of the recipient.","title":"Sending Multiple Files"},{"location":"Documentation/#messages-with-files","text":"Hmm! wappdriver is extremely smart. It can detect whether a string is a message or a file path. So you can do this as shown below. Dont hesitate to use a multiline line string for a long message. The messages will be send in exactly that order.","title":"Messages with Files"},{"location":"Documentation/#tired-bot","text":"If your computer or internet is very slow, you may face timeout exceptions, or messages not being sent properly. In this case we call our bot exhausted or tired. You can solve this by overriding the default timeout value.This can be done by passing an optional argument to the WhatsApp context manager. from wappdriver import WhatsApp with WhatsApp(timeout=100) as bot: bot.send('aahnik', 'Exhausted ?') The default value of timeout is 50s ( when you dont pass the argument) If bot is exhausted, increase timeout.","title":"Tired bot"},{"location":"Documentation/#update-variables","text":"When you run wappdriver for the first time, the values of selectors is fetched from the internet. If you want to update them from wappdriver import update_vars update_vars() If any new updates are availaible, they will be downloaded.","title":"Update Variables"},{"location":"Documentation/#set-chrome-driver-path","text":"When you will use wappdriver for the first time, it will ask you to input the path of Chrome Driver Executable in your system. You can set the path programmatically from wappdriver import set_chrome_driver_path path = '/home/aahnik/Downloads/chrome_driver' set_chrome_driver_path(path) Replace the value of variable path with the path of chrome driver in your system.","title":"Set Chrome Driver Path"},{"location":"Documentation/#in-brief","text":"Pass name of recipient as first argument and after that you can pass as many message arguments as you wish. The name of recipient must be saved in your contacts. Each message argument must be a string. If you want to send a file, pass the absolute path of the file to the function. Example Use: with WhatsApp() as bot: bot.send('aahnik', # name of recipient 'hi send by a bot', # message # absolute path of an image on computer '/home/aahnik/image.png', # absolute path of a video on computer '/home/aahnik/video.mp4', # absolute path of pdf on computer '/home/aahnik/django.pdf' ) The first argument you need to pass is the recipient's name which must be saved in your phone. After that you can pass as many string arguments you want for message. The string can be: - a text message or - the file path if you want to send a image, video, GIF, documents etc. - you can send multiple files, just pass them as arguments - You must use Absolute File Paths wappdriver will automatically detect whether a string is a message or a file path. If you are a developer and want to contribute code, read Developer Guide","title":"In Brief"},{"location":"For_Developers/","text":"To understand how wappdriver works, you can read the docstrings in the source code. You can go to the GitHub repo of this project or Click here to read from a webpage generated by pdocs","title":"For Developers"},{"location":"concepts/","text":"Concepts Here goes a list of concepts I have learned/implemented while building this project. Feel free to click on any concept to see a code sample where it is used. At most, search results can show two fragments from the same file, but there may be more results within the file. To learn any concept, copy and paste the concept title in Google or YouTube. Basics (functions, input, f-string, conditionals and so on) Exception Handling Objected Oriented Programming ( writing classes and methods ) Regular Expressions Directory Handling using os.path expanduser join File Handling Checking whether a file exists Reading and writing files Getting file size Python Requests Selenium WebDriver Selecting elements Clicking and sending keys File upload Decorators Closures First class functions Simple decorators Decorators with arguments Using functools.wraps Custom Exception Class Logging Docstings and pydoc Building simple CLI with Argparse Progress Bars with tqdm Python Packaging and Distribution Setuptools Install requires Publishing to PyPI Automate release to PyPI via GitHub Actions Writing in Markdown Using Badges Center Align Using VS Code Extension by Yu Zhang GitHub Pages Publishing Project Website Customizing the Dinky theme","title":"Concepts"},{"location":"concepts/#concepts","text":"Here goes a list of concepts I have learned/implemented while building this project. Feel free to click on any concept to see a code sample where it is used. At most, search results can show two fragments from the same file, but there may be more results within the file. To learn any concept, copy and paste the concept title in Google or YouTube. Basics (functions, input, f-string, conditionals and so on) Exception Handling Objected Oriented Programming ( writing classes and methods ) Regular Expressions Directory Handling using os.path expanduser join File Handling Checking whether a file exists Reading and writing files Getting file size Python Requests Selenium WebDriver Selecting elements Clicking and sending keys File upload Decorators Closures First class functions Simple decorators Decorators with arguments Using functools.wraps Custom Exception Class Logging Docstings and pydoc Building simple CLI with Argparse Progress Bars with tqdm Python Packaging and Distribution Setuptools Install requires Publishing to PyPI Automate release to PyPI via GitHub Actions Writing in Markdown Using Badges Center Align Using VS Code Extension by Yu Zhang GitHub Pages Publishing Project Website Customizing the Dinky theme","title":"Concepts"},{"location":"help/","text":"Getting Help For furthur assistance you can ask a question in issues","title":"Getting Help"},{"location":"help/#getting-help","text":"For furthur assistance you can ask a question in issues","title":"Getting Help"}]}